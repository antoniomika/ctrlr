// This #include statement was automatically added by the Particle IDE.
#include <IRremote.h>

int sendPin = A5;
int recvPin = D0;

IRrecv irrecv(recvPin);
IRsend irsend;

char string[20];
char *array[10];

char string2[20];
char *array2[10];

char charArr[16];

void myHandler(const char *event, const char *data) {
        String eventName = String(event);
        String dataString = String(data);

        dataString.toCharArray(string, dataString.length() + 1);

        int i = 0;

        array[i] = strtok(string, ";");

        while(array[i] != NULL) {
            array[++i] = strtok(NULL, ";");
        }

        bool sendCode = false;

        for (int j = 0; j < (sizeof(array)/sizeof(int)); ++j) {
            String string = array[j];
            int index = string.indexOf(":");

            String variable = string.substring(0, index);
            String value = string.substring(index + 1, string.length());

            if (value == "executeFunction") {
                sendCode = true;
            }

            if (variable == "codes") {
                value.toCharArray(string2, value.length());
                int i2 = 0;

                array2[i2] = strtok(string2, ",");

                while(array2[i2] != NULL) {
                    array2[++i2] = strtok(NULL, ",");
                }

                for (int u = 0; u < (sizeof(array2)/sizeof(int)); ++u) {
                    String incomingString = array2[u];

                    incomingString.toCharArray(charArr, incomingString.length() + 1);

                    long sendVal = strtoul(charArr, NULL, 0);

                    if (incomingString.length() < 8) {
                        irsend.sendSony(sendVal, 12);
                    }
                }

                irrecv.enableIRIn();
            }
        }
}

void setup() {
        Serial.begin(9600);

        Particle.subscribe("ctrlr", myHandler);

        irrecv.enableIRIn();

        pinMode(sendPin, OUTPUT);
        pinMode(recvPin, INPUT_PULLUP);
}

decode_results results;

void loop() {
        if (irrecv.decode(&results)) {
                Particle.publish("ctrlr", "subEvent:learning;code:" + String(results.value, HEX), 60, PRIVATE);
                irrecv.resume();
        }
}
